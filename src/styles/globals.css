/* Tailwind CSS v4 configuration and import */
@import "tailwindcss";

/* Explicitly define hover and active state styles */
@layer utilities {
  .hover\:bg-primary\/90:hover {
    background-color: color-mix(in srgb, var(--primary) 90%, transparent);
  }
  .hover\:bg-secondary\/90:hover {
    background-color: color-mix(in srgb, var(--secondary) 90%, transparent);
  }
  .hover\:bg-secondary\/80:hover {
    background-color: color-mix(in srgb, var(--secondary) 80%, transparent);
  }
  .hover\:bg-accent:hover {
    background-color: var(--accent);
  }
  .hover\:text-accent-foreground:hover {
    color: var(--accent-foreground);
  }
  .hover\:underline:hover {
    text-decoration-line: underline;
  }
  
  /* More pronounced active states for better visual feedback */
  .active\:bg-primary\/70:active {
    background-color: color-mix(in srgb, var(--primary) 70%, transparent);
    transform: scale(0.98);
  }
  .active\:bg-secondary\/70:active {
    background-color: color-mix(in srgb, var(--secondary) 70%, transparent);
    transform: scale(0.98);
  }
  .active\:bg-secondary\/60:active {
    background-color: color-mix(in srgb, var(--secondary) 60%, transparent);
    transform: scale(0.98);
  }
  .active\:bg-accent\/80:active {
    background-color: color-mix(in srgb, var(--accent) 80%, transparent);
    transform: scale(0.98);
  }
  .active\:text-primary\/70:active {
    color: color-mix(in srgb, var(--primary) 70%, transparent);
  }
  
  /* Original active states (keeping for backward compatibility) */
  .active\:bg-primary\/80:active {
    background-color: color-mix(in srgb, var(--primary) 80%, transparent);
    transform: scale(0.98);
  }
  .active\:bg-secondary\/80:active {
    background-color: color-mix(in srgb, var(--secondary) 80%, transparent);
    transform: scale(0.98);
  }
  .active\:bg-secondary\/70:active {
    background-color: color-mix(in srgb, var(--secondary) 70%, transparent);
    transform: scale(0.98);
  }
  .active\:bg-accent\/90:active {
    background-color: color-mix(in srgb, var(--accent) 90%, transparent);
    transform: scale(0.98);
  }
  .active\:text-primary\/80:active {
    color: color-mix(in srgb, var(--primary) 80%, transparent);
  }
}

/* Base styles */
@import "./fonts.css";
@import "./theme.css";
@import "./fluid-typography.css";
@import "./tailwind-theme.css";
@import "./tailwind-colors.css";
@import "./base.css";

/* Dark mode is now handled by Tailwind's dark class */

/* Theme variables are now defined in tailwind-theme.css using RGB space-separated values for Tailwind v4 compatibility */
:root {
  /* These variables are used for backward compatibility */
  --theme-background: var(--background);
  --theme-foreground: var(--foreground);
  --theme-card: var(--card);
  --theme-card-foreground: var(--card-foreground);
  --theme-popover: var(--popover);
  --theme-popover-foreground: var(--popover-foreground);
  --theme-primary: var(--primary);
  --theme-primary-foreground: var(--primary-foreground);
  --theme-secondary: var(--secondary);
  --theme-secondary-foreground: var(--secondary-foreground);
  --theme-muted: var(--muted);
  --theme-muted-foreground: var(--muted-foreground);
  --theme-accent: var(--accent);
  --theme-accent-foreground: var(--accent-foreground);
  --theme-destructive: var(--destructive);
  --theme-destructive-foreground: var(--destructive-foreground);
  --theme-border: var(--border);
  --theme-input: var(--input);
  --theme-ring: var(--ring);
  --theme-radius: var(--radius);
  
  /* Additional feedback colors */
  --theme-success: var(--success);
  --theme-success-foreground: var(--success-foreground);
  --theme-warning: var(--warning);
  --theme-warning-foreground: var(--warning-foreground);
  --theme-info: var(--info);
  --theme-info-foreground: var(--info-foreground);
}

/* Define utility classes to map to our CSS variables */
@layer utilities {
  /* Border Colors */
  .border-border {
    border-color: var(--border);
  }
  .border-border-subtle {
    border-color: var(--border-subtle);
  }
  .border-border-strong {
    border-color: var(--border-strong);
  }
  .border-border-focus {
    border-color: var(--border-focus);
  }
  .border-border-hover {
    border-color: var(--border-hover);
  }
  .border-border-disabled {
    border-color: var(--border-disabled);
  }
  /* Background Colors */
  .bg-background {
    background-color: var(--background);
  }
  .bg-background-subtle {
    background-color: var(--background-subtle);
  }
  .bg-background-muted {
    background-color: var(--background-muted);
  }
  .bg-background-hover {
    background-color: var(--background-hover);
  }
  .bg-background-active {
    background-color: var(--background-active);
  }
  .bg-background-disabled {
    background-color: var(--background-disabled);
  }
  .bg-foreground {
    background-color: var(--foreground);
  }
  .bg-card {
    background-color: var(--card);
  }
  .bg-card-foreground {
    background-color: var(--card-foreground);
  }
  .bg-card-hover {
    background-color: var(--card-hover);
  }
  .bg-popover {
    background-color: var(--popover);
  }
  .bg-popover-foreground {
    background-color: var(--popover-foreground);
  }
  .bg-primary {
    background-color: var(--primary);
  }
  .bg-primary-foreground {
    background-color: var(--primary-foreground);
  }
  .bg-secondary {
    background-color: var(--secondary);
  }
  .bg-secondary-foreground {
    background-color: var(--secondary-foreground);
  }
  .bg-muted {
    background-color: var(--muted);
  }
  .bg-muted-foreground {
    background-color: var(--muted-foreground);
  }
  .bg-accent {
    background-color: var(--accent);
  }
  .bg-accent-foreground {
    background-color: var(--accent-foreground);
  }
  .bg-destructive {
    background-color: var(--destructive);
  }
  .bg-destructive-foreground {
    background-color: var(--destructive-foreground);
  }
  .bg-border {
    background-color: var(--border);
  }
  .bg-input {
    background-color: var(--input);
  }
  .bg-ring {
    background-color: var(--ring);
  }
  .bg-success {
    background-color: var(--success);
  }
  .bg-success-foreground {
    background-color: var(--success-foreground);
  }
  .bg-warning {
    background-color: var(--warning);
  }
  .bg-warning-foreground {
    background-color: var(--warning-foreground);
  }
  .bg-info {
    background-color: var(--info);
  }
  .bg-info-foreground {
    background-color: var(--info-foreground);
  }

  /* Text Colors */
  .text-background {
    color: var(--background);
  }
  .text-foreground {
    color: var(--foreground);
  }
  .text-content-primary {
    color: var(--content-primary);
  }
  .text-content-secondary {
    color: var(--content-secondary);
  }
  .text-content-muted {
    color: var(--content-muted);
  }
  .text-content-placeholder {
    color: var(--content-placeholder);
  }
  .text-content-disabled {
    color: var(--content-disabled);
  }
  .text-content-inverted {
    color: var(--content-inverted);
  }
  .text-content-brand {
    color: var(--content-brand);
  }
  
  /* Interactive Colors */
  .bg-interactive-default {
    background-color: var(--interactive-default);
  }
  .bg-interactive-hover {
    background-color: var(--interactive-hover);
  }
  .bg-interactive-active {
    background-color: var(--interactive-active);
  }
  .bg-interactive-subtle {
    background-color: var(--interactive-subtle);
  }
  .text-interactive-default {
    color: var(--interactive-default);
  }
  .text-interactive-hover {
    color: var(--interactive-hover);
  }
  .text-interactive-active {
    color: var(--interactive-active);
  }
  .text-interactive-on-interactive {
    color: var(--interactive-on-interactive);
  }
  .bg-interactive-secondary {
    background-color: var(--interactive-secondary);
  }
  .bg-interactive-secondary-hover {
    background-color: var(--interactive-secondary-hover);
  }
  .bg-interactive-secondary-active {
    background-color: var(--interactive-secondary-active);
  }
  .text-interactive-on-secondary {
    color: var(--interactive-on-secondary);
  }
  .text-card {
    color: var(--card);
  }
  .text-card-foreground {
    color: var(--card-foreground);
  }
  .text-popover {
    color: var(--popover);
  }
  .text-popover-foreground {
    color: var(--popover-foreground);
  }
  .text-primary {
    color: var(--primary);
  }
  .text-primary-foreground {
    color: var(--primary-foreground);
  }
  .text-secondary {
    color: var(--secondary);
  }
  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }
  .text-muted {
    color: var(--muted);
  }
  .text-muted-foreground {
    color: var(--muted-foreground);
  }
  .text-accent {
    color: var(--accent);
  }
  .text-accent-foreground {
    color: var(--accent-foreground);
  }
  .text-destructive {
    color: var(--destructive);
  }
  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }
  .text-border {
    color: var(--border);
  }
  .text-input {
    color: var(--input);
  }
  .text-ring {
    color: var(--ring);
  }
  .text-success {
    color: var(--success);
  }
  .text-success-foreground {
    color: var(--success-foreground);
  }
  .text-warning {
    color: var(--warning);
  }
  .text-warning-foreground {
    color: var(--warning-foreground);
  }
  .text-info {
    color: var(--info);
  }
  .text-info-foreground {
    color: var(--info-foreground);
  }
  .text-info-content {
    color: var(--info-content);
  }

  /* Border Colors */
  .border-border {
    border-color: var(--border);
  }
  .border-input {
    border-color: var(--input);
  }
  .border-primary {
    border-color: var(--primary);
  }
  .border-secondary {
    border-color: var(--secondary);
  }
  .border-destructive {
    border-color: var(--destructive);
  }
  .border-success {
    border-color: var(--success);
  }
  .border-warning {
    border-color: var(--warning);
  }
  .border-info {
    border-color: var(--info);
  }

  /* Ring Colors */
  .ring-ring {
    --tw-ring-color: var(--ring);
  }
  .ring-primary {
    --tw-ring-color: var(--primary);
  }
  .ring-secondary {
    --tw-ring-color: var(--secondary);
  }
  .ring-destructive {
    --tw-ring-color: var(--destructive);
  }

  /* Border Radius */
  .rounded-theme {
    border-radius: var(--radius);
  }
  .rounded-theme-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-theme-md {
    border-radius: var(--radius-md);
  }
  .rounded-theme-lg {
    border-radius: var(--radius-lg);
  }
}

/* Let's use the automatic source detection instead of explicit patterns */
/* Remove all @source directives that were causing issues */

@layer base {
  html,
  body {
    min-height: 100vh;
    background-color: rgb(var(--background));
    color: rgb(var(--foreground));
  }

  body {
    max-width: 100%;
    overflow-x: hidden;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  * {
    box-sizing: border-box;
  }
}

/* Theme transitions - quicker for text */
*:not(svg *, path) {
  /* Only transition background and border colors */
  transition: 
    background-color 150ms ease-in-out, 
    border-color 150ms ease-in-out;
}

/* Apply color changes immediately */
*, *::before, *::after {
  /* Explicitly disable transition for color */
  transition-property: background-color, border-color;
}

/* Animation keyframes */
@keyframes spin-slow {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 3s linear infinite;
}

/* Visual feedback animations */
@keyframes flash-update {
  0% { outline-color: rgba(0, 0, 0, 0); }
  50% { outline-color: #1e293b; opacity: 0.4; }
  100% { outline-color: rgba(0, 0, 0, 0); }
}

.typography-updated {
  outline: 2px solid rgba(0, 0, 0, 0);
  outline-offset: 2px;
  animation: flash-update 0.6s ease-in-out;
}

/* Focus state animations */
@keyframes focus-pulse {
  0%, 100% { outline-offset: 2px; }
  50% { outline-offset: 4px; }
}

.focus-visible:focus-visible {
  outline: 2px solid #1e293b;
  outline-offset: 2px;
  animation: focus-pulse 2s ease-in-out infinite;
}

/* Spacing utilities */
.space-y-4 > * + * {
  margin-top: 1rem;
}

/* Additional global styles can go here */