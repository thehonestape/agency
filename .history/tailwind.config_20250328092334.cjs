/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/**/*.{js,jsx,ts,tsx}',
    './index.html',
  ],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        // Base colors with opacity support
        background: 'rgb(var(--background) / <alpha-value>)',
        'background-foreground': 'rgb(var(--background-foreground) / <alpha-value>)',
        foreground: 'rgb(var(--foreground) / <alpha-value>)',
        card: 'rgb(var(--card) / <alpha-value>)',
        'card-foreground': 'rgb(var(--card-foreground) / <alpha-value>)',
        primary: 'rgb(var(--primary) / <alpha-value>)',
        'primary-foreground': 'rgb(var(--primary-foreground) / <alpha-value>)',
        secondary: 'rgb(var(--secondary) / <alpha-value>)',
        'secondary-foreground': 'rgb(var(--secondary-foreground) / <alpha-value>)',
        muted: 'rgb(var(--muted) / <alpha-value>)',
        'muted-foreground': 'rgb(var(--muted-foreground) / <alpha-value>)',
        accent: 'rgb(var(--accent) / <alpha-value>)',
        'accent-foreground': 'rgb(var(--accent-foreground) / <alpha-value>)',
        
        // Color scales with opacity support
        'primary-50': 'rgb(var(--primary-50) / <alpha-value>)',
        'primary-100': 'rgb(var(--primary-100) / <alpha-value>)',
        'primary-200': 'rgb(var(--primary-200) / <alpha-value>)',
        'primary-300': 'rgb(var(--primary-300) / <alpha-value>)',
        'primary-400': 'rgb(var(--primary-400) / <alpha-value>)',
        'primary-500': 'rgb(var(--primary-500) / <alpha-value>)',
        'primary-600': 'rgb(var(--primary-600) / <alpha-value>)',
        'primary-700': 'rgb(var(--primary-700) / <alpha-value>)',
        'primary-800': 'rgb(var(--primary-800) / <alpha-value>)',
        'primary-900': 'rgb(var(--primary-900) / <alpha-value>)',
        'primary-950': 'rgb(var(--primary-950) / <alpha-value>)',
        
        'secondary-50': 'rgb(var(--secondary-50) / <alpha-value>)',
        'secondary-100': 'rgb(var(--secondary-100) / <alpha-value>)',
        'secondary-200': 'rgb(var(--secondary-200) / <alpha-value>)',
        'secondary-300': 'rgb(var(--secondary-300) / <alpha-value>)',
        'secondary-400': 'rgb(var(--secondary-400) / <alpha-value>)',
        'secondary-500': 'rgb(var(--secondary-500) / <alpha-value>)',
        'secondary-600': 'rgb(var(--secondary-600) / <alpha-value>)',
        'secondary-700': 'rgb(var(--secondary-700) / <alpha-value>)',
        'secondary-800': 'rgb(var(--secondary-800) / <alpha-value>)',
        'secondary-900': 'rgb(var(--secondary-900) / <alpha-value>)',
        'secondary-950': 'rgb(var(--secondary-950) / <alpha-value>)',
        
        'accent-50': 'rgb(var(--accent-50) / <alpha-value>)',
        'accent-100': 'rgb(var(--accent-100) / <alpha-value>)',
        'accent-200': 'rgb(var(--accent-200) / <alpha-value>)',
        'accent-300': 'rgb(var(--accent-300) / <alpha-value>)',
        'accent-400': 'rgb(var(--accent-400) / <alpha-value>)',
        'accent-500': 'rgb(var(--accent-500) / <alpha-value>)',
        'accent-600': 'rgb(var(--accent-600) / <alpha-value>)',
        'accent-700': 'rgb(var(--accent-700) / <alpha-value>)',
        'accent-800': 'rgb(var(--accent-800) / <alpha-value>)',
        'accent-900': 'rgb(var(--accent-900) / <alpha-value>)',
        'accent-950': 'rgb(var(--accent-950) / <alpha-value>)',
        
        // State colors with opacity support
        destructive: 'rgb(var(--destructive) / <alpha-value>)',
        'destructive-foreground': 'rgb(var(--destructive-foreground) / <alpha-value>)',
        success: 'rgb(var(--success) / <alpha-value>)',
        'success-foreground': 'rgb(var(--success-foreground) / <alpha-value>)',
        warning: 'rgb(var(--warning) / <alpha-value>)',
        'warning-foreground': 'rgb(var(--warning-foreground) / <alpha-value>)',
        info: 'rgb(var(--info) / <alpha-value>)',
        'info-foreground': 'rgb(var(--info-foreground) / <alpha-value>)',
        
        // UI colors with opacity support
        popover: 'rgb(var(--popover) / <alpha-value>)',
        'popover-foreground': 'rgb(var(--popover-foreground) / <alpha-value>)',
        border: 'rgb(var(--border) / <alpha-value>)',
        'border-foreground': 'rgb(var(--border-foreground) / <alpha-value>)',
        input: 'rgb(var(--input) / <alpha-value>)',
        'input-foreground': 'rgb(var(--input-foreground) / <alpha-value>)',
        ring: 'rgb(var(--ring) / <alpha-value>)',

        // Button specific colors with opacity support
        'button-background': 'rgb(var(--button-background) / <alpha-value>)',
        'button-text': 'rgb(var(--button-text) / <alpha-value>)',
        
        // Navigation colors with opacity support
        'nav-bg': 'rgb(var(--nav-bg) / <alpha-value>)',
        'nav-border': 'rgb(var(--nav-border) / <alpha-value>)',
        'nav-text': 'rgb(var(--nav-text) / <alpha-value>)',
        'nav-text-hover': 'rgb(var(--nav-text-hover) / <alpha-value>)',
        'nav-bg-hover': 'rgb(var(--nav-bg-hover) / <alpha-value>)',
        'nav-bg-active': 'rgb(var(--nav-bg-active) / <alpha-value>)',
        'nav-text-active': 'rgb(var(--nav-text-active) / <alpha-value>)',
        'nav-icon': 'rgb(var(--nav-icon) / <alpha-value>)',
        'nav-icon-active': 'rgb(var(--nav-icon-active) / <alpha-value>)',
        'nav-icon-hover': 'rgb(var(--nav-icon-hover) / <alpha-value>)',
        'nav-section-text': 'rgb(var(--nav-section-text) / <alpha-value>)',
        'nav-count': 'rgb(var(--nav-count) / <alpha-value>)',
      },
      fontFamily: {
        sans: ['var(--font-maison-neue)'],
        mono: ['var(--font-maison-neue-mono)'],
      },
      fontSize: {
        xs: ['0.75rem', { lineHeight: '1rem' }],
        sm: ['0.875rem', { lineHeight: '1.25rem' }],
        base: ['1rem', { lineHeight: '1.5rem' }],
        lg: ['1.125rem', { lineHeight: '1.75rem' }],
        xl: ['1.25rem', { lineHeight: '1.75rem' }],
        '2xl': ['1.5rem', { lineHeight: '2rem' }],
        '3xl': ['1.875rem', { lineHeight: '2.25rem' }],
        '4xl': ['2.25rem', { lineHeight: '2.5rem' }],
        '5xl': ['3rem', { lineHeight: '1' }],
      },
      spacing: {
        px: '1px',
        0: '0px',
        0.5: '0.125rem',
        1: '0.25rem',
        1.5: '0.375rem',
        2: '0.5rem',
        2.5: '0.625rem',
        3: '0.75rem',
        3.5: '0.875rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        11: '2.75rem',
        12: '3rem',
        14: '3.5rem',
        16: '4rem',
        20: '5rem',
        24: '6rem',
        28: '7rem',
        32: '8rem',
        36: '9rem',
        40: '10rem',
        44: '11rem',
        48: '12rem',
        52: '13rem',
        56: '14rem',
        60: '15rem',
        64: '16rem',
        72: '18rem',
        80: '20rem',
        96: '24rem',
      },
      borderRadius: {
        none: '0px',
        sm: '0.125rem',
        DEFAULT: '0.25rem',
        md: '0.375rem',
        lg: '0.5rem',
        xl: '0.75rem',
        '2xl': '1rem',
        '3xl': '1.5rem',
        full: '9999px',
      },
      boxShadow: {
        sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',
        DEFAULT: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',
        md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',
        lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',
        xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',
        '2xl': '0 25px 50px -12px rgb(0 0 0 / 0.25)',
        inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',
        none: 'none',
      },
    },
  },
  plugins: [
    require('@tailwindcss/typography'),
    require('tailwindcss-animate'),
  ],
} 